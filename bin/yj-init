#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const ora = require('ora')
const download = require('download-git-repo')
const tplObj = require(`${__dirname}/../template`)
const inquirer = require('inquirer')
// 自定义交互式命令行的问题及简单的校验
let question = [
  {
    name: "templateName",
    type: 'input',
    message: "请输入模板名称：",
    validate (val) {
      if (val === '') {
        return 'templateName is required!'
      } else if (!tplObj[val]) {
        return 'Template no existed!'
      } else {
        return true
      }
    }
  },
  {
    name: "projectName",
    type: 'input',
    message: "请输入项目名称",
    validate (val) {
      if (val === '') return 'The projectName is required!'
      return true
    }
  }
]

inquirer
  .prompt(question).then(answers => {
    // answers 就是用户输入的内容，是个对象
    let { templateName, projectName } = answers;
    if (!tplObj[templateName]) {
      console.log(chalk.red('\n Template does not exit! \n '))
      return
    }
    if (!projectName) {
      console.log(chalk.red('\n Project should not be empty! \n '))
      return
    }
    
    url = tplObj[templateName]
    
    console.log(chalk.white('\n Start generating... \n'))
    const spinner = ora("Downloading...");
    spinner.start();
    
    download (
      url,
      projectName,
      err => {
        if (err) {
          spinner.fail();
          console.log(chalk.red(`Generation failed. ${err}`))
          return
        }
    
        spinner.succeed();
        console.log(chalk.green('\n Generation completed!'))
        console.log('\n To get started')
        console.log(`\n    cd ${projectName} \n`)
      }
    )
  })
